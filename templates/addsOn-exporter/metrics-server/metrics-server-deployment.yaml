{{- if .Values.metricsServer.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "kubeservice-monitor.metricsServer.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "kubeservice-monitor.metricsServer.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.metricsServer.replicas }}
  selector:
    matchLabels: {{- include "kubeservice-monitor.metricsServer.matchLabels" . | nindent 6 }}
  {{- if .Values.metricsServer.updateStrategy }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.metricsServer.updateStrategy "context" $) | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "kubeservice-monitor.metricsServer.labels" . | nindent 8 }}
        {{- if .Values.metricsServer.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.metricsServer.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.metricsServer.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.metricsServer.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "kubeservice-monitor.metricsServer.serviceAccountName" . }}
      {{- if .Values.metricsServer.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.metricsServer.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.metricsServer.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.metricsServer.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.metricsServer.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.metricsServer.nodeAffinityPreset.type "key" .Values.metricsServer.nodeAffinityPreset.key "values" .Values.metricsServer.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.metricsServer.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.metricsServer.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.metricsServer.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.metricsServer.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.metricsServer.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.metricsServer.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.metricsServer.hostNetwork }}
      hostNetwork: true
      {{- end }}
      dnsPolicy: {{ .Values.metricsServer.dnsPolicy }}
      {{- if .Values.metricsServer.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.metricsServer.terminationGracePeriodSeconds }}
      {{- end }}
      containers:
        - name: metrics-server
          image: {{ template "kubeservice-monitor.metricsServer.image" . }}
          imagePullPolicy: {{ .Values.metricsServer.image.pullPolicy | quote }}
          {{- if .Values.metricsServer.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.metricsServer.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command:
            - metrics-server
          args:
            - --secure-port={{ .Values.metricsServer.containerPorts.https }}
            {{- if .Values.metricsServer.extraArgs }}
            {{- include "common.tplvalues.render" (dict "value" .Values.metricsServer.extraArgs "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.metricsServer.resources }}
          resources: {{- toYaml .Values.metricsServer.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ .Values.metricsServer.containerPorts.name }}
              containerPort: {{ .Values.metricsServer.containerPorts.https }}
          {{- if .Values.metricsServer.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metricsServer.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /livez
              port: {{ .Values.metricsServer.containerPorts.name }}
              scheme: HTTPS
          {{- end }}
          {{- if .Values.metricsServer.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metricsServer.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /readyz
              port: {{ .Values.metricsServer.containerPorts.name }}
              scheme: HTTPS
          {{- end }}
          {{- if .Values.metricsServer.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metricsServer.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: {{ .Values.metricsServer.containerPorts.name }}
          {{- end }}
{{- end }}